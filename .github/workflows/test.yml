name: Run Tests

on: [push]

jobs:
  codespell_and_ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip install --user codespell[toml] ruff
      # TODO: Fix lint issues and remove `--exit-zero` from the line below.
      - run: ruff --exit-zero --output-format=github --target-version=py38 .
  test:
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"]
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v3
      - name: set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: set up Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.6.1"

      - name: install dependencies
        run: |
          set -x
          poetry config virtualenvs.create false
          poetry install --all-extras
          # install packages to run the examples
          pip install opencv-python opencv-contrib-python-headless httpx replicate langchain openai simpy tortoise-orm
          pip install -r tests/requirements.txt
          # try fix issue with importlib_resources
          pip install importlib-resources

      - name: test startup
        run: ./test_startup.sh

      - name: setup chromedriver
        uses: nanasess/setup-chromedriver@v2.2.2

      - name: pytest
        run: pytest --cov=./ --cov-report=xml --cov-report=html

      - name: upload screenshots
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: pytest-screenshots
          path: tests/screenshots

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: "HTML Coverage ${{ matrix.python-version }}"
          path: "htmlcov"
          retention-days: 7

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          directory: ./
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          handle_no_reports_found: true
          token: ${{ secrets.CODECOV_TOKEN }} # required
          verbose: true # optional (default = false)
